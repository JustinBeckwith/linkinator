on:
  push:
    branches:
      - main
  pull_request:
name: ci
env:
  FORCE_COLOR: 2
  NODE: 24
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22, 24]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - run: node -v
      - run: npm ci
      - run: npm test
      - run: npm run coverage
        if: matrix.node == env.node
      - uses: codecov/codecov-action@v5
        if: matrix.node == env.node
        with:
          fail_ci_if_error: false
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE }}
          cache: npm
      - run: npm ci
      - run: npm test
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE }}
          cache: npm
      - run: npm ci
      - run: npm run lint
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE }}
          cache: npm
      - run: npm ci
      - run: npm run docs-test
  release:
    if: github.repository == 'JustinBeckwith/linkinator' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test, lint]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE }}
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - run: npm ci
      - run: npm run build
      - run: mkdir -p build/binaries
      - run: npm run build-binaries
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          NPM_TOKEN: "placeholder-for-oidc"
      - name: Upload binaries to release
        if: success()
        run: |
          # Get the latest release tag
          RELEASE_TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          if [ -n "$RELEASE_TAG" ]; then
            gh release upload "$RELEASE_TAG" build/binaries/* --clobber
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
